/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}*,*::after,*::before{box-sizing:border-box}body{font-family:"Roboto Slab", sans-serif;margin:0 auto;width:100%;Max-width:100vw}.container{width:80%;max-width:1200px;margin:0 auto;padding:0 15px}input[type="text"],input[type="email"],input[type="submit"]{border:none;list-style:none}.text-center{text-align:center}.icon-point{display:flex;flex-direction:row;justify-content:center;margin:4% auto}a{text-decoration:none;cursor:pointer}ul{list-style:none}.box-3-button .text-center{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.box-3-button-email,.box-3-button-left{border:3px solid #218294;border-radius:25px;font-size:18px;color:#612316;text-decoration:none;text-transform:uppercase;width:250px;height:60px;text-align:center;line-height:60px;font-family:"Roboto",sans-serif;position:relative;transition:.5s;overflow:hidden}.box-3-button-email:hover{color:#dd4b2b}.box-3-button-left:hover{background-color:#dd4b2b}.menu{width:100%;padding-top:2%;padding-left:4vw}.button{padding:8px;background-color:#fff;border-radius:15px;border:1px solid #fff;color:#31353e;font-size:18px;font-weight:400;line-height:24px;font-family:"Roboto Slab",sans-serif}.button:hover{background-color:#dd4b2b}.logo{text-align:center}.box-1{background-image:url("../../assets/img/photo_room.jpg");background-repeat:no-repeat;background-size:cover;background-color:rgba(59,67,76,0.8);font-size:16px;width:100%;padding-top:10%}.box-1 .box-1-content:after{content:"";clear:both;display:table}@media (min-width: 580px){.photo-food{float:left;width:50%}.menu{display:flex}.menu-button{padding:0 5%}.menu-text{display:flex}}h1{text-align:center;font-family:"Roboto Slab",sans-serif;color:#fff;font-size:2em;font-weight:700;line-height:48px;text-shadow:0 1px 0 rgba(0,0,0,0.4)}@media (min-width: 839px){.photo-food{float:left;width:33%}h1{color:#fff;font-size:72px;font-weight:700;line-height:48px}}@media (max-width: 840px){.menu-button{display:flex}.menu-text{display:none}}.text-under-h1{text-align:center;text-shadow:0 1px 0 rgba(0,0,0,0.4);color:#fff;font-family:"Roboto Slab",sans-serif;color:#fff;font-size:30px;font-weight:700;line-height:48px}.header-food-lard-text{text-align:center;color:#fff;font-family:"Roboto Slab",sans-serif;font-size:30px;font-weight:700;line-height:24px}.header-food-small-text{color:#fff;font-family:"Roboto",sans-serif;font-size:15px;font-weight:300;line-height:30px}.header-button{width:213px;height:54px;border-radius:27px;border:1px solid rgba(255,255,255,0.5);background-color:#fff;text-align:center;margin:0 auto;padding-top:11px}.header-button-down{color:#612316;font-family:"Roboto Slab",sans-serif;font-size:18px;font-weight:400;line-height:30px;position:relative;text-align:center;padding-top:8px}.header-button-down:hover{color:black}.header-end{visibility:hidden}.block-2{width:100%;padding:0 5%}.block-2-text{color:#31353e;font-size:30px;font-weight:700;line-height:24px;font-family:"Roboto Slab",sans-serif;text-align:center;padding:2em 0}.block-2-large-text{color:#31353e;font-size:24px;font-weight:700;line-height:30px;font-family:"Roboto Slab",sans-serif;text-align:center}.block-2-small-text{color:#31353e;font-size:15px;font-weight:300;line-height:30px;font-family:"Roboto",sans-serif;text-align:center}.block-2-photo:after{content:"";clear:both;display:table;text-align:center}@media (min-width: 834px){.block-2-photo-1{float:left;width:50%}}@media (min-width: 1050px){.block-2-photo{display:flex;justify-content:space-around;align-items:center}}.box-3{width:100%;height:17em;background-image:url("../../assets/img/photo_food1.jpg");background-size:cover;margin:4em 0}.box-3-large-text{color:#fff;font-size:30px;font-weight:700;line-height:48px;font-family:"Roboto Slab",sans-serif;text-align:center}.box-3-small-text{color:#fff;font-size:15px;font-weight:300;line-height:24px;font-family:"Roboto",sans-serif;text-align:center}.box-4{width:100%;padding:0 2em;background-color:#fff}.box-4-lard-text{color:#191b29;font-size:30px;font-weight:700;line-height:48px;font-family:"Roboto Slab",sans-serif;text-align:center;padding:0 2em}.box-4-small-text{color:#191b29;font-size:16px;font-weight:300;line-height:30px;font-family:"Roboto",sans-serif;text-align:center;padding:0 2em}@media (max-width: 840px){.box-4-photo-left{display:none}}.box-4:after{content:"";clear:both;display:table;text-align:center}@media (min-width: 1000px){.box-4-all{float:left;width:50%}}.submit-block-4-left{margin-bottom:2px;padding:11px 50px;color:#fff;background-color:#dd4b2b;font-family:"Roboto Slab",sans-serif;border-radius:27px}.submit-block-4-left:hover{opacity:0.7}.submit-block-4-right{padding:11px 50px;color:#fff;background-color:#4b4e73;font-family:"Roboto Slab",sans-serif;border-radius:27px}.submit-block-4-right:hover{opacity:0.7}.footer{background-color:#d75d0e}.footer .tab{padding:2em 0;text-align:center;color:#fff;font-size:16px;font-weight:400;line-height:30px;font-family:"Roboto Slab",sans-serif}.footer:after{content:"";clear:both;display:table;text-align:center}@media (min-width: 580px){.tab{float:left;width:33%}}.footer-down{background-image:url("../../assets/img/photo_food1.jpg");background-size:cover;background-repeat:no-repeat;min-height:20vh;width:100%}.footer-down-size{height:10em;visibility:hidden}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
